{"ast":null,"code":"var _jsxFileName = \"/home/alex/agency_amazon/amazon-web-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AccountsTable from './components/AccountsTable';\nimport ProfilesTable from './components/ProfilesTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  useEffect(() => {\n    // Fetch accounts data (replace this with your actual data fetching logic) \n    const fetchData = async () => {\n      // Example data structure, replace with your actual data \n      const mockAccounts = [{\n        accountId: 1,\n        email: 'example1@example.com',\n        authToken: 'token1',\n        creationDate: '2022-01-01'\n      }, {\n        accountId: 2,\n        email: 'example2@example.com',\n        authToken: 'token2',\n        creationDate: '2022-01-02'\n      }\n      // Add more accounts as needed \n      ];\n      setAccounts(mockAccounts);\n    };\n    fetchData();\n  }, []);\n  const handleAccountClick = account => {\n    // Set the selected account when clicked \n    setSelectedAccount(account);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Accounts Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountsTable, {\n      accounts: accounts,\n      onAccountClick: handleAccountClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), selectedAccount && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profiles of Selected Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProfilesTable, {\n        profiles: selectedAccount.profiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QzBNSa5uZqSK8uI92SblbQYdpok=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AccountsTable","ProfilesTable","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","accounts","setAccounts","selectedAccount","setSelectedAccount","fetchData","mockAccounts","accountId","email","authToken","creationDate","handleAccountClick","account","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAccountClick","profiles","_c","$RefreshReg$"],"sources":["/home/alex/agency_amazon/amazon-web-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport AccountsTable from './components/AccountsTable'; \nimport ProfilesTable from './components/ProfilesTable'; \n \nconst App = () => { \n  const [accounts, setAccounts] = useState([]); \n  const [selectedAccount, setSelectedAccount] = useState(null); \n \n  useEffect(() => { \n    // Fetch accounts data (replace this with your actual data fetching logic) \n    const fetchData = async () => { \n      // Example data structure, replace with your actual data \n      const mockAccounts = [ \n        { accountId: 1, email: 'example1@example.com', authToken: 'token1', creationDate: '2022-01-01' }, \n        { accountId: 2, email: 'example2@example.com', authToken: 'token2', creationDate: '2022-01-02' }, \n        // Add more accounts as needed \n      ]; \n \n      setAccounts(mockAccounts); \n    }; \n \n    fetchData(); \n  }, []); \n \n  const handleAccountClick = (account) => { \n    // Set the selected account when clicked \n    setSelectedAccount(account); \n  }; \n \n  return ( \n    <div className=\"container mt-4\"> \n      <h1>Accounts Table</h1> \n      <AccountsTable accounts={accounts} onAccountClick={handleAccountClick} /> \n \n      {selectedAccount && ( \n        <> \n          <h2>Profiles of Selected Account</h2> \n          <ProfilesTable profiles={selectedAccount.profiles} /> \n        </> \n      )} \n    </div> \n  ); \n}; \n \nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACA,MAAMC,YAAY,GAAG,CACnB;QAAEC,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE,sBAAsB;QAAEC,SAAS,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAa,CAAC,EAChG;QAAEH,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE,sBAAsB;QAAEC,SAAS,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAa;MAC/F;MAAA,CACD;MAEDR,WAAW,CAACI,YAAY,CAAC;IAC3B,CAAC;IAEDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,kBAAkB,GAAIC,OAAO,IAAK;IACtC;IACAR,kBAAkB,CAACQ,OAAO,CAAC;EAC7B,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BlB,OAAA;MAAAkB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBtB,OAAA,CAACH,aAAa;MAACQ,QAAQ,EAAEA,QAAS;MAACkB,cAAc,EAAER;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAExEf,eAAe,iBACdP,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrCtB,OAAA,CAACF,aAAa;QAAC0B,QAAQ,EAAEjB,eAAe,CAACiB;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACrD,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtCID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}