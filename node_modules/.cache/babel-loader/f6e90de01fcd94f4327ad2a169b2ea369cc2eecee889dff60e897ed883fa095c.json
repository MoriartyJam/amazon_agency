{"ast":null,"code":"var _jsxFileName = \"/home/alex/agency_amazon/amazon-web-app/src/components/AccountsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountsTable = ({\n  accounts,\n  onAccountClick\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [accountsPerPage] = useState(5);\n  const indexOfLastAccount = currentPage * accountsPerPage;\n  const indexOfFirstAccount = indexOfLastAccount - accountsPerPage;\n  const currentAccounts = accounts.slice(indexOfFirstAccount, indexOfLastAccount);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const [filter, setFilter] = useState('');\n  const filteredAccounts = accounts.filter(account => account.email.toLowerCase().includes(filter.toLowerCase()));\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const handleSort = key => {\n    const direction = sortConfig.key === key && sortConfig.direction === 'asc' ? 'desc' : 'asc';\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  const sortedAccounts = [...accounts].sort((a, b) => {\n    if (sortConfig.key !== null) {\n      if (a[sortConfig.key] < b[sortConfig.key]) {\n        return sortConfig.direction === 'asc' ? -1 : 1;\n      }\n      if (a[sortConfig.key] > b[sortConfig.key]) {\n        return sortConfig.direction === 'asc' ? 1 : -1;\n      }\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Filter by Email\",\n      value: filter,\n      onChange: e => setFilter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('accountId'),\n            children: \"Account ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('email'),\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('authToken'),\n            children: \"Auth Token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('creationDate'),\n            children: \"Creation Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedAccounts.map(account => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => onAccountClick(account),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.accountId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.authToken\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.creationDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, account.accountId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: Math.ceil(accounts.length / accountsPerPage)\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `page-item ${currentPage === index + 1 ? 'active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-link\",\n          onClick: () => paginate(index + 1),\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountsTable, \"+EmSfJUUG7nO2+45/sJC84vbp4M=\");\n_c = AccountsTable;\nexport default AccountsTable;\nvar _c;\n$RefreshReg$(_c, \"AccountsTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AccountsTable","accounts","onAccountClick","_s","currentPage","setCurrentPage","accountsPerPage","indexOfLastAccount","indexOfFirstAccount","currentAccounts","slice","paginate","pageNumber","filter","setFilter","filteredAccounts","account","email","toLowerCase","includes","sortConfig","setSortConfig","key","direction","handleSort","sortedAccounts","sort","a","b","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","accountId","authToken","creationDate","Array","from","length","Math","ceil","_","index","_c","$RefreshReg$"],"sources":["/home/alex/agency_amazon/amazon-web-app/src/components/AccountsTable.js"],"sourcesContent":["import React, { useState } from 'react'; \nimport 'bootstrap/dist/css/bootstrap.min.css'; \n \nconst AccountsTable = ({ accounts, onAccountClick }) => { \n\n\nconst [currentPage, setCurrentPage] = useState(1); \nconst [accountsPerPage] = useState(5); \n\nconst indexOfLastAccount = currentPage * accountsPerPage; \nconst indexOfFirstAccount = indexOfLastAccount - accountsPerPage; \nconst currentAccounts = accounts.slice(indexOfFirstAccount, indexOfLastAccount); \n\nconst paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const [filter, setFilter] = useState(''); \n \n  const filteredAccounts = accounts.filter((account) => \n    account.email.toLowerCase().includes(filter.toLowerCase()) \n  );\n\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' }); \n \n  const handleSort = (key) => { \n    const direction = sortConfig.key === key && sortConfig.direction === 'asc' ? 'desc' : 'asc'; \n    setSortConfig({ key, direction }); \n  }; \n \n  const sortedAccounts = [...accounts].sort((a, b) => { \n    if (sortConfig.key !== null) { \n      if (a[sortConfig.key] < b[sortConfig.key]) { \n        return sortConfig.direction === 'asc' ? -1 : 1; \n      } \n      if (a[sortConfig.key] > b[sortConfig.key]) { \n        return sortConfig.direction === 'asc' ? 1 : -1; \n      } \n    } \n    return 0; \n  }); \n \n  return ( \n    <div> \n    <input \n      type=\"text\" \n      placeholder=\"Filter by Email\" \n      value={filter} \n      onChange={(e) => setFilter(e.target.value)} \n    />\n    <table className=\"table\"> \n      <thead> \n        <tr> \n          <th onClick={() => handleSort('accountId')}>Account ID</th> \n          <th onClick={() => handleSort('email')}>Email</th> \n          <th onClick={() => handleSort('authToken')}>Auth Token</th> \n          <th onClick={() => handleSort('creationDate')}>Creation Date</th> \n        </tr> \n      </thead> \n      <tbody> \n        {sortedAccounts.map((account) => ( \n          <tr key={account.accountId} onClick={() => onAccountClick(account)}> \n            <td>{account.accountId}</td> \n            <td>{account.email}</td> \n            <td>{account.authToken}</td> \n            <td>{account.creationDate}</td> \n          </tr> \n        ))} \n      </tbody> \n    </table> \n    <ul className=\"pagination\"> \n        {Array.from({ length: Math.ceil(accounts.length / accountsPerPage) }).map((_, index) => ( \n          <li key={index} className={`page-item ${currentPage === index + 1 ? 'active' : ''}`}> \n            <button className=\"page-link\" onClick={() => paginate(index + 1)}> \n              {index + 1} \n            </button> \n          </li> \n        ))} \n      </ul> \n    </div> \n  ); \n}; \n\nexport default AccountsTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}