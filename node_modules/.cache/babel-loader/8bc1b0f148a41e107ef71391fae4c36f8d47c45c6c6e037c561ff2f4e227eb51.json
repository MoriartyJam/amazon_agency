{"ast":null,"code":"var _jsxFileName = \"/home/alex/agency_amazon/amazon-web-app/src/components/AccountsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountsTable = ({\n  accounts,\n  onAccountClick\n}) => {\n  _s();\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const [filter, setFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const accountsPerPage = 3;\n  const handleSort = key => {\n    const direction = sortConfig.key === key && sortConfig.direction === 'asc' ? 'desc' : 'asc';\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n  const handleFilter = () => {\n    setCurrentPage(1);\n  };\n  const filteredAccounts = accounts.filter(account => account.email.toLowerCase().includes(filter.toLowerCase()));\n  const sortedAccounts = [...filteredAccounts].sort((a, b) => {\n    if (sortConfig.key !== null) {\n      if (a[sortConfig.key] < b[sortConfig.key]) {\n        return sortConfig.direction === 'asc' ? -1 : 1;\n      }\n      if (a[sortConfig.key] > b[sortConfig.key]) {\n        return sortConfig.direction === 'asc' ? 1 : -1;\n      }\n    }\n    return 0;\n  });\n  const indexOfLastAccount = currentPage * accountsPerPage;\n  const indexOfFirstAccount = indexOfLastAccount - accountsPerPage;\n  const currentAccounts = sortedAccounts.slice(indexOfFirstAccount, indexOfLastAccount);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Filter by Email\",\n        value: filter,\n        onChange: e => setFilter(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFilter,\n        children: \"Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSort('accountId'),\n              children: \"Account ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSort('email'),\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSort('authToken'),\n              children: \"Auth Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSort('creationDate'),\n              children: \"Creation Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentAccounts.map(account => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => onAccountClick(account),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.accountId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.authToken\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: account.creationDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, account.accountId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: Math.ceil(sortedAccounts.length / accountsPerPage)\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `page-item ${currentPage === index + 1 ? 'active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-link\",\n          onClick: () => paginate(index + 1),\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountsTable, \"xgi46lp6fLvpH4NSgNmG4Jixwyo=\");\n_c = AccountsTable;\nexport default AccountsTable;\nvar _c;\n$RefreshReg$(_c, \"AccountsTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AccountsTable","accounts","onAccountClick","_s","sortConfig","setSortConfig","key","direction","filter","setFilter","currentPage","setCurrentPage","accountsPerPage","handleSort","handleFilter","filteredAccounts","account","email","toLowerCase","includes","sortedAccounts","sort","a","b","indexOfLastAccount","indexOfFirstAccount","currentAccounts","slice","paginate","pageNumber","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","accountId","authToken","creationDate","Array","from","length","Math","ceil","_","index","_c","$RefreshReg$"],"sources":["/home/alex/agency_amazon/amazon-web-app/src/components/AccountsTable.js"],"sourcesContent":["import React, { useState } from 'react'; \nimport 'bootstrap/dist/css/bootstrap.min.css'; \n \nconst AccountsTable = ({ accounts, onAccountClick }) => { \n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' }); \n  const [filter, setFilter] = useState(''); \n  const [currentPage, setCurrentPage] = useState(1); \n  const accountsPerPage = 3; \n \n  const handleSort = (key) => { \n    const direction = sortConfig.key === key && sortConfig.direction === 'asc' ? 'desc' : 'asc'; \n    setSortConfig({ key, direction }); \n  }; \n \n  const handleFilter = () => { \n    setCurrentPage(1); \n  }; \n \n  const filteredAccounts = accounts.filter((account) => \n    account.email.toLowerCase().includes(filter.toLowerCase()) \n  ); \n \n  const sortedAccounts = [...filteredAccounts].sort((a, b) => { \n    if (sortConfig.key !== null) { \n      if (a[sortConfig.key] < b[sortConfig.key]) { \n        return sortConfig.direction === 'asc' ? -1 : 1; \n      } \n      if (a[sortConfig.key] > b[sortConfig.key]) { \n        return sortConfig.direction === 'asc' ? 1 : -1; \n      } \n    } \n    return 0; \n  }); \n \n  const indexOfLastAccount = currentPage * accountsPerPage; \n  const indexOfFirstAccount = indexOfLastAccount - accountsPerPage; \n  const currentAccounts = sortedAccounts.slice(indexOfFirstAccount, indexOfLastAccount); \n \n  const paginate = (pageNumber) => setCurrentPage(pageNumber); \n \n  return ( \n    <div> \n      <div> \n        <input \n          type=\"text\" \n          placeholder=\"Filter by Email\" \n          value={filter} \n          onChange={(e) => setFilter(e.target.value)} \n        /> \n        <button onClick={handleFilter}>Filter</button> \n      </div> \n \n      <table className=\"table\"> \n        <thead> \n          <tr> \n            <th> \n              <button onClick={() => handleSort('accountId')}>Account ID</button> \n            </th> \n            <th> \n              <button onClick={() => handleSort('email')}>Email</button> \n            </th> \n            <th> \n              <button onClick={() => handleSort('authToken')}>Auth Token</button> \n            </th> \n            <th> \n              <button onClick={() => handleSort('creationDate')}>Creation Date</button> \n            </th> \n          </tr> \n        </thead> \n        <tbody> \n          {currentAccounts.map((account) => ( \n            <tr key={account.accountId} onClick={() => onAccountClick(account)}> \n              <td>{account.accountId}</td> \n              <td>{account.email}</td> \n              <td>{account.authToken}</td> \n              <td>{account.creationDate}</td> \n            </tr> \n          ))} \n        </tbody> \n      </table> \n \n      <ul className=\"pagination\"> \n        {Array.from({ length: Math.ceil(sortedAccounts.length / accountsPerPage) }).map((_, index) => ( \n          <li key={index} className={`page-item ${currentPage === index + 1 ? 'active' : ''}`}> \n            <button className=\"page-link\" onClick={() => paginate(index + 1)}> \n              {index + 1} \n            </button> \n          </li> \n        ))} \n      </ul> \n    </div> \n  ); \n}; \n \nexport default AccountsTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}